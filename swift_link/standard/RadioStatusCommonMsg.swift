//
//  RadioStatusCommonMsg.swift
//  MAVLink Protocol Swift Library
//
//  Generated from standard.xml, common.xml on Sat Jun 22 2019 by mavgen_swift.py 
//  https://github.com/modnovolyk/MAVLinkSwift
//

import Foundation

/// Status generated by radio and injected into MAVLink stream.
public struct RadioStatus {

	/// Local (message sender) recieved signal strength indication in device-dependent units/scale. Values: [0-254], 255: invalid/unknown.
	public let rssi: UInt8

	/// Remote (message receiver) signal strength indication in device-dependent units/scale. Values: [0-254], 255: invalid/unknown.
	public let remrssi: UInt8

	/// Remaining free transmitter buffer space.
	public let txbuf: UInt8

	/// Local background noise level. These are device dependent RSSI values (scale as approx 2x dB on SiK radios). Values: [0-254], 255: invalid/unknown.
	public let noise: UInt8

	/// Remote background noise level. These are device dependent RSSI values (scale as approx 2x dB on SiK radios). Values: [0-254], 255: invalid/unknown.
	public let remnoise: UInt8

	/// Count of radio packet receive errors (since boot).
	public let rxerrors: UInt16

	/// Count of error corrected radio packets (since boot).
	public let fixed: UInt16
}

extension RadioStatus: Message {
    public static let id = UInt8(109)
    public static var typeName = "RADIO_STATUS"
    public static var typeDescription = "Status generated by radio and injected into MAVLink stream."
    public static var fieldDefinitions: [FieldDefinition] = [("rssi", 4, "UInt8", 0, "Local (message sender) recieved signal strength indication in device-dependent units/scale. Values: [0-254], 255: invalid/unknown."), ("remrssi", 5, "UInt8", 0, "Remote (message receiver) signal strength indication in device-dependent units/scale. Values: [0-254], 255: invalid/unknown."), ("txbuf", 6, "UInt8", 0, "Remaining free transmitter buffer space."), ("noise", 7, "UInt8", 0, "Local background noise level. These are device dependent RSSI values (scale as approx 2x dB on SiK radios). Values: [0-254], 255: invalid/unknown."), ("remnoise", 8, "UInt8", 0, "Remote background noise level. These are device dependent RSSI values (scale as approx 2x dB on SiK radios). Values: [0-254], 255: invalid/unknown."), ("rxerrors", 0, "UInt16", 0, "Count of radio packet receive errors (since boot)."), ("fixed", 2, "UInt16", 0, "Count of error corrected radio packets (since boot).")]

    public init(data: Data) throws {
		rxerrors = try data.number(at: 0)
		fixed = try data.number(at: 2)
		rssi = try data.number(at: 4)
		remrssi = try data.number(at: 5)
		txbuf = try data.number(at: 6)
		noise = try data.number(at: 7)
		remnoise = try data.number(at: 8)
    }

    public func pack() throws -> Data {
        var payload = Data(count: 9)
		try payload.set(rxerrors, at: 0)
		try payload.set(fixed, at: 2)
		try payload.set(rssi, at: 4)
		try payload.set(remrssi, at: 5)
		try payload.set(txbuf, at: 6)
		try payload.set(noise, at: 7)
		try payload.set(remnoise, at: 8)
        return payload
    }
}
